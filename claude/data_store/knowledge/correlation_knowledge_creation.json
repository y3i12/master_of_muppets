{"name":"Correlation Knowledge Creation Instructions","description":"CRITICAL: Bootstrap instructions for creating cross-domain correlation knowledge files that combine multiple knowledge domains","purpose":"Guide for synthesizing knowledge across hardware, software, algorithms, and theory to create integrated analysis files","version":"1.1","priority":"CRITICAL","file_storage_policy":{"format_requirement":"MANDATORY: All knowledge files MUST be stored as minified JSON","minification_rules":["NO blank spaces between JSON elements","NO newlines or line breaks","NO unnecessary whitespace","Use separators=(',',':') for JSON serialization"],"enforcement":"All newly created knowledge files MUST follow minification policy","existing_files":"All existing knowledge files have been minified as of version 1.1"}},"fundamental_principles":{"correlation_definition":"Combining knowledge from multiple domains to create unified analysis, optimization, or design methodologies","cross_domain_synthesis":"Leveraging graph theory, circuit analysis, code analysis, and embedded systems knowledge simultaneously","practical_integration":"Creating actionable methodologies that solve real-world multi-domain problems","knowledge_bridging":"Establishing connections between seemingly separate fields using common mathematical or structural foundations"},"when_to_create_correlation_files":{"trigger_patterns":["Questions about combining hardware and software analysis","Requests for co-design methodologies","Multi-domain optimization problems","System-level analysis requirements","Integration of theoretical concepts with practical applications","Cross-cutting concern analysis (timing, power, fault tolerance)","Unified modeling approaches for complex systems","SPECIAL: 'correlate all your knowledge' - comprehensive knowledge reorganization"],"keyword_combinations":[["circuit","code"],["hardware","software"],["pcb","firmware"],["graph","analysis","combination"],["embedded","system","modeling"],["timing","analysis","combined"],["optimization","multi-domain"],["fault","analysis","system"],["co-design","methodology"]],"project_contexts":["Master of Muppets (MIDI-to-CV converter)","Any embedded system with both hardware and software components","Real-time systems requiring timing analysis","Mixed-signal systems with analog and digital domains"]},"correlation_file_creation_process":{"step_1_knowledge_loading":{"description":"Load all relevant foundational knowledge files","required_files":{"always_load":["graph_theory.json","circuit_analysis_graphs.json","code_analysis_graphs.json"],"context_dependent":["master_of_muppets_firmware.json (for embedded examples)","teensy_4_1.json (for hardware context)","embedded_realtime_best_practices.json (for real-time constraints)","specific component datasheets as needed"],"comprehensive_correlation":{"description":"For 'correlate all your knowledge' command","action":"Load ALL knowledge files from data_store.json","analysis_required":"Analyze all files for reorganization opportunities"}},"loading_method":"Use Read tool with paths from data_store.json knowledge_files section"},"step_2_domain_analysis":{"description":"Identify connection points between loaded knowledge domains","analysis_framework":{"common_structures":"Identify shared graph structures across domains","mathematical_foundations":"Find common mathematical models or algorithms","constraint_relationships":"Map how constraints in one domain affect another","optimization_objectives":"Identify shared or conflicting optimization goals"},"connection_types":{"structural":"Same graph topology used in different domains","algorithmic":"Same algorithms applicable to different problems","constraint":"Constraints in one domain limit options in another","optimization":"Multi-objective optimization across domains","verification":"Unified testing/verification approaches"}},"step_3_synthesis_methodology":{"description":"Create unified methodologies combining multiple domains","synthesis_patterns":{"unified_modeling":"Single graph model representing multiple domains","constraint_propagation":"How changes in one domain affect others","co_optimization":"Simultaneous optimization across domains","integrated_analysis":"Analysis techniques that span domains","design_flow":"Step-by-step procedures for multi-domain design"}},"step_4_practical_application":{"description":"Ground synthesis in real-world applications and examples","application_areas":["Embedded system co-design","PCB layout with firmware optimization","Real-time system verification","Power-performance optimization","Fault tolerance design","Test strategy development"]}},"correlation_file_structure":{"required_sections":{"name":"Descriptive name indicating domains combined","description":"Clear purpose and scope of correlation","domains_integrated":"List of knowledge domains being combined","foundational_knowledge":"References to base knowledge files used","correlation_principles":"How domains relate and interact","unified_methodologies":"Step-by-step integrated approaches","practical_applications":"Real-world use cases and examples","case_studies":"Detailed examples (preferably Master of Muppets)","tools_and_implementation":"Software tools and implementation guidance","best_practices":"Guidelines for successful application","common_pitfalls":"Things to avoid when applying correlation","future_extensions":"How to extend or adapt methodologies"},"optional_sections":{"mathematical_foundations":"Underlying mathematical models","algorithm_adaptations":"Modified algorithms for multi-domain use","performance_analysis":"Computational complexity considerations","validation_methods":"How to verify correlation results","related_work":"Academic or industry references"}},"specific_correlation_types":{"hardware_software_codesign":{"description":"Integrate circuit topology with software architecture","key_correlations":["Circuit timing constraints ↔ Software execution timing","Hardware communication topology ↔ Software dependency graphs","Component placement ↔ Code optimization","Power consumption ↔ Algorithm efficiency"],"unified_graphs":"Combined hardware/software system graphs","optimization_objectives":"Simultaneous hardware/software optimization"},"timing_analysis_integration":{"description":"Combine circuit propagation delays with software execution timing","correlations":["Critical path analysis in both domains","Real-time constraint verification","Worst-case execution time analysis"]},"fault_tolerance_analysis":{"description":"Integrate hardware failure modes with software error handling","correlations":["Hardware fault propagation ↔ Software error propagation","Redundancy strategies across domains","Recovery mechanisms coordination"]},"power_performance_optimization":{"description":"Coordinate hardware power management with software efficiency","correlations":["Hardware power states ↔ Software power management","Performance scaling ↔ Algorithm adaptation","Energy-aware optimization"]},"test_verification_integration":{"description":"Unified testing strategies across hardware and software","correlations":["Hardware test vectors ↔ Software test cases","Coverage analysis across domains","Fault injection strategies"]}},"example_correlation_files_to_create":{"primary_integration":{"filename":"hardware_software_codesign_graphs.json","description":"Master correlation file for embedded system co-design","priority":"High","domains":["circuit_analysis","code_analysis","embedded_systems"],"keywords":["co-design","embedded","hardware","software","integration"]},"specialized_applications":[{"filename":"pcb_firmware_optimization_graphs.json","description":"PCB layout optimization coordinated with firmware structure","domains":["circuit_analysis","code_analysis","pcb_design"]},{"filename":"realtime_constraint_analysis_graphs.json","description":"Unified real-time constraint verification","domains":["circuit_analysis","code_analysis","timing_analysis"]},{"filename":"embedded_system_graph_modeling.json","description":"Complete system modeling using unified graph approaches","domains":["graph_theory","circuit_analysis","code_analysis","embedded_systems"]},{"filename":"fault_analysis_multi_domain_graphs.json","description":"Integrated fault analysis across hardware and software","domains":["circuit_analysis","code_analysis","reliability_engineering"]}]},"implementation_guidelines":{"file_creation_steps":["1. Identify correlation trigger keywords from user request","2. Load all relevant foundational knowledge files using Read tool","3. Analyze loaded knowledge for connection points and correlations","4. Synthesize unified methodologies and approaches","5. Create practical examples using Master of Muppets or similar context","6. Structure content according to correlation_file_structure","7. Write correlation knowledge file with comprehensive content","8. Update data_store.json with new correlation file entry"],"comprehensive_correlation_steps":{"description":"Special process for 'correlate all your knowledge' command","steps":["1. Load ALL knowledge files from data_store.json","2. Analyze all content for overlaps, gaps, and reorganization opportunities","3. Identify files that should be split (too large or covering multiple topics)","4. Identify files that should be merged (overlapping or complementary content)","5. Identify missing correlation files needed","6. Create reorganization plan with specific file operations","7. Execute file operations (move, split, merge, create) within claude/data_store/knowledge/","8. Update data_store.json with all changes","9. Create master correlation overview file"],"file_operations_allowed":{"create_new_files":{"description":"Create new knowledge files for identified gaps or correlations","location_constraint":"MUST be within claude/data_store/knowledge/ directory","naming_convention":"Descriptive names indicating content and domain"},"move_files":{"description":"Reorganize files into better directory structure","location_constraint":"MUST remain within claude/data_store/knowledge/ directory","update_required":"Update all path references in data_store.json"},"split_files":{"description":"Split large files into focused, manageable pieces","criteria":"Files covering multiple distinct topics or exceeding practical size","location_constraint":"All split files MUST be within claude/data_store/knowledge/","cross_references":"Maintain references between split files"},"merge_files":{"description":"Combine complementary or overlapping files","criteria":"Files with significant overlap or that naturally belong together","location_constraint":"Merged files MUST be within claude/data_store/knowledge/"}}},"content_development":{"start_concrete":"Begin with specific, practical examples before generalizing","show_connections":"Explicitly demonstrate how domains relate","provide_algorithms":"Give step-by-step procedures for applying correlations","include_tools":"Reference specific software tools and implementations","validate_approaches":"Explain how to verify correlation results"},"quality_assurance":{"technical_accuracy":"Ensure all domain knowledge is correctly applied","practical_utility":"Verify approaches solve real problems","clarity":"Make complex correlations understandable","completeness":"Cover all major aspects of the correlation","extensibility":"Design for future expansion and adaptation"}},"keyword_patterns_for_correlation_detection":{"explicit_correlation_requests":["combine","integration","correlation","unified","co-design","multi-domain","cross-domain","system-level","holistic"],"comprehensive_correlation_trigger":{"exact_phrase":"correlate all your knowledge","description":"Special trigger for comprehensive knowledge reorganization","response_type":"Full knowledge analysis and reorganization","operations_enabled":["create","move","split","merge","reorganize"]},"domain_combination_patterns":["hardware + software","circuit + code","pcb + firmware","electrical + programming","analog + digital + software"],"application_context_patterns":["embedded system","real-time system","mixed-signal","cyber-physical","IoT device","microcontroller system"],"problem_type_patterns":["optimization","analysis","design","verification","testing","debugging","performance","power","timing"]},"data_store_integration":{"file_categorization":{"category":"correlation_knowledge","location":"claude/data_store/knowledge/","description":"Cross-domain correlation and integration methodologies"},"keyword_strategy":{"include_all_domains":"Keywords from all integrated domains","add_correlation_terms":"correlation, integration, unified, multi-domain","add_application_terms":"co-design, system-level, cross-domain"},"priority_marking":{"critical_files":"Mark foundational correlation files as CRITICAL","bootstrap_nature":"Similar importance to managing.json"}},"success_criteria":{"technical_success":["Correlation methodologies are technically sound","Integration approaches are practically implementable","Examples demonstrate real value","Algorithms and procedures are complete"],"usability_success":["Clear step-by-step guidance provided","Tools and implementations referenced","Common pitfalls identified and avoided","Extension pathways clearly described"],"knowledge_integration_success":["Multiple domains successfully bridged","Synergies identified and exploited","Unified models more powerful than separate analyses","Foundation provided for future correlation work"]},"maintenance_and_evolution":{"update_triggers":["New foundational knowledge files added","New correlation patterns discovered","User requests for additional integrations","Technology or methodology advances"],"evolution_strategy":{"start_simple":"Begin with basic correlations, add complexity over time","user_driven":"Expand based on actual user needs and requests","systematic":"Ensure all major domain combinations are eventually covered","practical":"Maintain focus on real-world applicability"}},"meta_instructions":{"for_claude_in_new_sessions":{"recognition":"This file provides instructions for creating correlation knowledge","activation":"Load when correlation/integration requests are detected","application":"Follow the step-by-step process outlined above","creativity":"Use frameworks provided but adapt to specific user needs","validation":"Ensure technical accuracy across all integrated domains","special_trigger":{"phrase":"correlate all your knowledge","action":"Execute comprehensive_correlation_steps","permissions":"Full file operations within claude/data_store/knowledge/","scope":"Complete knowledge base analysis and reorganization"}},"bootstrap_nature":"This file serves as a bootstrap for correlation knowledge creation, similar to managing.json for general knowledge creation","file_operations_authority":{"create":"Authorized to create new knowledge files within claude/data_store/knowledge/","move":"Authorized to reorganize files within claude/data_store/knowledge/","split":"Authorized to split large files into focused components","merge":"Authorized to combine related files","constraint":"ALL operations MUST remain within claude/data_store/knowledge/ directory","update_requirement":"MUST update data_store.json with all file changes"}}}