{
"title": "KiCad S-Expressions Format Reference",
"description": "Comprehensive guide to KiCad's S-expression file format used in schematics, PCB layouts, symbols, and footprints",
"version": "1.0.0",
"keywords": [
"s-expression",
"sexpr",
"kicad",
"parsing",
"lisp",
"syntax",
"grammar",
"kicad_sch",
"kicad_pcb",
"kicad_mod",
"kicad_sym",
"file format",
"tokenizer",
"lexer",
"parser",
"atom",
"list",
"parenthesis",
"schematic format",
"pcb format",
"footprint format",
"symbol format"
],
"source": "KiCad Developer Documentation, File Format Specifications, Community Resources",
"last_updated": "2025-01-19",
"content": {
"overview": {
"description": "S-expressions (symbolic expressions) are the file format used by KiCad for all design files since version 6",
"origin": "Based on Lisp-style symbolic expressions and Specctra DSN format",
"encoding": "UTF-8",
"advantages": [
"Human-readable text format",
"Version control friendly",
"Easy to parse programmatically",
"Extensible without breaking compatibility",
"Self-documenting structure"
]
},
"syntax_rules": {
"basic_structure": {
"expression": "(keyword parameters...)",
"nesting": "Expressions can contain other expressions",
"example": "(module Teensy40 (layer F.Cu) (tedit 5E188217))"
},
"atoms": {
"definition": "Basic unit of data - either a string or number",
"types": {
"unquoted": "Strings without spaces: module, F.Cu, 1.27",
"quoted": "Strings with spaces: \"Teensy 4.0\", \"Reference Value\"",
"numbers": "Integer or floating point: 123, -45.67, 1.27e-3",
"keywords": "Special atoms that define structure: module, pad, fp_line"
},
"rules": [
"Keywords are always lowercase ASCII",
"International characters allowed in non-keyword atoms",
"Quotes required for strings containing whitespace or special characters"
]
},
"lists": {
"definition": "Parenthesis-delimited collection of atoms or other lists",
"format": "(keyword atom1 atom2 (nested list) ...)",
"ordering": "First element is typically a keyword defining the list type"
}
},
"file_extensions": {
"kicad_sch": {
"type": "Schematic file",
"root_element": "(kicad_sch ...)",
"major_sections": [
"version",
"generator",
"uuid",
"paper",
"lib_symbols",
"symbol",
"wire",
"junction"
]
},
"kicad_pcb": {
"type": "PCB layout file",
"root_element": "(kicad_pcb ...)",
"major_sections": [
"version",
"generator",
"general",
"layers",
"setup",
"net",
"footprint",
"segment",
"via",
"zone"
]
},
"kicad_mod": {
"type": "Footprint file",
"root_element": "(module NAME ...)",
"major_sections": [
"layer",
"tedit",
"fp_text",
"fp_line",
"fp_circle",
"fp_arc",
"pad",
"model"
]
},
"kicad_sym": {
"type": "Symbol library file",
"root_element": "(kicad_symbol_lib ...)",
"major_sections": [
"version",
"generator",
"symbol",
"property",
"pin",
"graphic"
]
},
"kicad_pro": {
"type": "Project file",
"format": "JSON (not S-expression)",
"note": "Exception - uses JSON format instead of S-expressions"
}
},
"common_elements": {
"coordinates": {
"format": "(at X Y [ANGLE])",
"units": "millimeters for PCB, mils for schematic",
"example": "(at 16.51 7.62 90)"
},
"size": {
"format": "(size WIDTH HEIGHT)",
"example": "(size 1.6 1.6)"
},
"effects": {
"format": "(effects (font (size H V) (thickness T)) ...)",
"example": "(effects (font (size 1.27 1.27) (thickness 0.15)))"
},
"layers": {
"format": "(layer LAYER_NAME)",
"common_layers": [
"F.Cu",
"B.Cu",
"F.SilkS",
"B.SilkS",
"F.Mask",
"B.Mask",
"F.Fab",
"B.Fab"
]
},
"properties": {
"format": "(property \"NAME\" \"VALUE\" ...)",
"example": "(property \"Reference\" \"U1\")"
}
},
"parsing_strategies": {
"tokenization": {
"process": "Split input into tokens based on whitespace and parentheses",
"special_handling": "Quoted strings treated as single token",
"tools": {
"c++": "DSNLEXER::NextTok() in KiCad source",
"python": "Custom tokenizer or regex-based approach"
}
},
"tree_building": {
"approach": "Recursive descent parser",
"structure": "Build nested tree of lists and atoms",
"validation": "Check keyword validity and parameter counts"
},
"output_formatting": {
"indentation": "2 or 4 spaces per level (configurable)",
"line_breaks": "After opening parenthesis for complex structures",
"quoting": "Use OUTPUTFORMATTER::Quoted() for proper escaping"
}
},
"programming_examples": {
"python_parsing": {
"description": "Basic S-expression parser in Python",
"code_snippet": [
"def parse_sexpr(text):",
"    tokens = tokenize(text)",
"    return build_tree(tokens)",
"",
"def tokenize(text):",
"    # Split on parentheses and whitespace",
"    # Handle quoted strings specially"
]
},
"element_access": {
"description": "Accessing specific elements",
"patterns": [
"Find by keyword: search for (keyword ...)",
"Extract value: get second element after keyword",
"Iterate children: process all sub-expressions"
]
}
},
"version_compatibility": {
"kicad_6": "Introduced S-expression format for all files",
"kicad_7": "Added new properties and fields, backward compatible",
"kicad_8": "Enhanced thermal relief specifications",
"kicad_9": "Latest version with additional generator metadata"
},
"best_practices": {
"parsing": [
"Always handle UTF-8 encoding",
"Be tolerant of whitespace variations",
"Preserve unknown fields for forward compatibility",
"Validate structure but allow extensions"
],
"generation": [
"Use consistent indentation",
"Quote strings with special characters",
"Include version and generator information",
"Maintain element ordering conventions"
],
"modification": [
"Parse entire file before modification",
"Preserve formatting where possible",
"Update version/generator tags",
"Validate output before saving"
]
},
"tools_and_libraries": {
"official": {
"kicad_source": "C++ implementation in KiCad source code",
"sexpr_parser": "Built-in parser and formatter classes"
},
"python": {
"kiutils": "Comprehensive KiCad file manipulation",
"kicad-skip": "S-expression manipulation library",
"sexpdata": "Generic S-expression parser (needs adaptation)"
},
"other_languages": {
"javascript": "kicad-utils npm package",
"rust": "kicad-parse crate",
"csharp": "Custom implementations available"
}
},
"common_patterns": {
"component_definition": {
"pattern": "(symbol (property ...) (pin ...) ...)",
"usage": "Defining schematic symbols"
},
"net_connection": {
"pattern": "(net (code N) (name \"NET_NAME\"))",
"usage": "Defining electrical connections"
},
"graphical_element": {
"pattern": "(fp_line (start X1 Y1) (end X2 Y2) (layer L) (width W))",
"usage": "Drawing lines on PCB or footprint"
},
"pad_definition": {
"pattern": "(pad NUMBER TYPE SHAPE (at X Y) (size W H) (drill D) (layers ...))",
"usage": "Defining component pads"
}
},
"troubleshooting": {
"common_errors": [
"Mismatched parentheses - use editor with bracket matching",
"Wrong coordinate units - mils vs mm confusion",
"Missing required fields - check format specification",
"Incorrect quoting - strings with spaces need quotes",
"Encoding issues - ensure UTF-8 throughout"
],
"validation_tips": [
"Open file in KiCad to validate structure",
"Use online S-expression validators",
"Compare with known good files",
"Check parenthesis balance programmatically"
]
}
},
"related_files": [
"claude/data_store/knowledge/coding/kicad/pcb.json",
"claude/data_store/knowledge/coding/kicad/schematic.json"
]
}